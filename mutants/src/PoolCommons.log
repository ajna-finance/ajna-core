*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, solidity.rules, c_like.rules
SKIPPED 82 MUTANTS ONLY CHANGING STRING LITERALS
4558 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 29:     uint256 internal constant CUBIC_ROOT_1000000 = 100 * 1e18;  ==>      uint256  constant CUBIC_ROOT_1000000 = 100 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.0.sol] 
PROCESSING MUTANT: 30:     uint256 internal constant ONE_THIRD          = 0.333333333333333334 * 1e18;  ==>      uint256  constant ONE_THIRD          = 0.333333333333333334 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.1.sol] 
PROCESSING MUTANT: 32:     uint256 internal constant INCREASE_COEFFICIENT = 1.1 * 1e18;  ==>      uint256  constant INCREASE_COEFFICIENT = 1.1 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.2.sol] 
PROCESSING MUTANT: 33:     uint256 internal constant DECREASE_COEFFICIENT = 0.9 * 1e18;  ==>      uint256  constant DECREASE_COEFFICIENT = 0.9 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.3.sol] 
PROCESSING MUTANT: 34:     int256  internal constant PERCENT_102          = 1.02 * 1e18;  ==>      int256  internal constant PERCENT_102          = 1.0 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.4.sol] 
PROCESSING MUTANT: 34:     int256  internal constant PERCENT_102          = 1.02 * 1e18;  ==>      int256  internal constant PERCENT_102          = 1.1 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.5.sol] 
PROCESSING MUTANT: 34:     int256  internal constant PERCENT_102          = 1.02 * 1e18;  ==>      int256   constant PERCENT_102          = 1.02 * 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.6.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // +ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.7.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // *ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.8.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // /ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.9.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // %ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.10.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)+12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.11.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)-12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.12.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)*12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.13.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)%12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.14.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.15.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(0)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.16.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(1)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.17.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(-1)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.18.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln((2+1))/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.19.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln((2-1))/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.20.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256   constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12...VALID [written to mutants/PoolCommons/PoolCommons.mutant.21.sol] 
PROCESSING MUTANT: 35:     int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // -ln(2)/12  ==>      int256  internal constant NEG_H_MAU_HOURS      = -0.057762265046662105 * 1e18; // ...VALID [written to mutants/PoolCommons/PoolCommons.mutant.22.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // +ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.23.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // *ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.24.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // /ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.25.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // %ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.26.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)+84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.27.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)-84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.28.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)*84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.29.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)%84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.30.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.31.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(0)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.32.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(1)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.33.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(-1)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.34.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln((2+1))/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.35.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln((2-1))/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.36.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256   constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84...VALID [written to mutants/PoolCommons/PoolCommons.mutant.37.sol] 
PROCESSING MUTANT: 36:     int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // -ln(2)/84  ==>      int256  internal constant NEG_H_TU_HOURS       = -0.008251752149523158 * 1e18; // ...VALID [written to mutants/PoolCommons/PoolCommons.mutant.38.sol] 
PROCESSING MUTANT: 43:     event UpdateInterestRate(uint256 oldRate, uint256 newRate);  ==>      event UpdateInterestRate( uint256 newRate,uint256 oldRate);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.39.sol] 
PROCESSING MUTANT: 104:         vars.newDebtCol   = Maths.wmul(poolState_.inflator, vars.t0Debt2ToCollateral);  ==>          vars.newDebtCol   = Maths.wmul( vars.t0Debt2ToCollateral,poolState_.inflator);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.40.sol] 
PROCESSING MUTANT: 105:         vars.newLupt0Debt = Maths.wmul(lup_, poolState_.t0Debt);  ==>          vars.newLupt0Debt = Maths.wmul( poolState_.t0Debt,lup_);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.41.sol] 
PROCESSING MUTANT: 108:         if (vars.lastEmaUpdate != block.timestamp) {  ==>          if (vars.lastEmaUpdate < block.timestamp) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.42.sol] 
PROCESSING MUTANT: 113:             vars.weightMau = PRBMathSD59x18.exp(PRBMathSD59x18.mul(NEG_H_MAU_HOURS, vars.elapsed));  ==>              vars.weightMau = PRBMathSD59x18.exp(PRBMathSD59x18.mul( vars.elapsed,NEG_H_MAU_HOURS));...VALID [written to mutants/PoolCommons/PoolCommons.mutant.43.sol] 
PROCESSING MUTANT: 114:             vars.weightTu  = PRBMathSD59x18.exp(PRBMathSD59x18.mul(NEG_H_TU_HOURS,  vars.elapsed));  ==>              vars.weightTu  = PRBMathSD59x18.exp(PRBMathSD59x18.mul(  vars.elapsed,NEG_H_TU_HOURS));...VALID [written to mutants/PoolCommons/PoolCommons.mutant.44.sol] 
PROCESSING MUTANT: 117:             vars.debtEma = vars.debtEma == 0 ? vars.newDebt :  ==>              vars.debtEma = vars.debtEma <= 0 ? vars.newDebt :...VALID [written to mutants/PoolCommons/PoolCommons.mutant.45.sol] 
PROCESSING MUTANT: 124:             vars.depositEma = vars.depositEma == 0 ? vars.newMeaningfulDeposit :  ==>              vars.depositEma = vars.depositEma <= 0 ? vars.newMeaningfulDeposit :...VALID [written to mutants/PoolCommons/PoolCommons.mutant.46.sol] 
PROCESSING MUTANT: 131:             vars.debtColEma = vars.debtColEma == 0 ? vars.newDebtCol :  ==>              vars.debtColEma = vars.debtColEma <= 0 ? vars.newDebtCol :...VALID [written to mutants/PoolCommons/PoolCommons.mutant.47.sol] 
PROCESSING MUTANT: 138:             vars.lupt0DebtEma = vars.lupt0DebtEma == 0 ? vars.newLupt0Debt :  ==>              vars.lupt0DebtEma = vars.lupt0DebtEma <= 0 ? vars.newLupt0Debt :...VALID [written to mutants/PoolCommons/PoolCommons.mutant.48.sol] 
PROCESSING MUTANT: 155:         if (block.timestamp - interestParams_.interestRateUpdate > 12 hours) {  ==>          if (block.timestamp % interestParams_.interestRateUpdate > 12 hours) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.49.sol] 
PROCESSING MUTANT: 190:         EmaState      storage emaParams_,  ==>          EmaState      memory emaParams_,...VALID [written to mutants/PoolCommons/PoolCommons.mutant.50.sol] 
PROCESSING MUTANT: 200:         newInflator_ = Maths.wmul(poolState_.inflator, pendingFactor);  ==>          newInflator_ = Maths.wmul( pendingFactor,poolState_.inflator);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.51.sol] 
PROCESSING MUTANT: 201:         uint256 htp = Maths.wmul(thresholdPrice_, newInflator_);  ==>          uint256 htp = Maths.wmul( newInflator_,thresholdPrice_);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.52.sol] 
PROCESSING MUTANT: 204:         if (htp > MAX_PRICE)  ==>          if (htp >= MAX_PRICE)...VALID [written to mutants/PoolCommons/PoolCommons.mutant.53.sol] 
PROCESSING MUTANT: 206:             htpIndex = 1;  ==>              htpIndex = 0;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.54.sol] 
PROCESSING MUTANT: 206:             htpIndex = 1;  ==>              htpIndex = (1+1);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.55.sol] 
PROCESSING MUTANT: 206:             htpIndex = 1;  ==>              htpIndex = (1-1);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.56.sol] 
PROCESSING MUTANT: 207:         else if (htp < MIN_PRICE)  ==>          else if (htp <= MIN_PRICE)...VALID [written to mutants/PoolCommons/PoolCommons.mutant.57.sol] 
PROCESSING MUTANT: 215:         if (depositAboveHtp != 0) {  ==>          if (depositAboveHtp > 0) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.58.sol] 
PROCESSING MUTANT: 218:                 Maths.wmul(pendingFactor - Maths.WAD, poolState_.debt)  ==>                  Maths.wmul(pendingFactor % Maths.WAD, poolState_.debt)...VALID [written to mutants/PoolCommons/PoolCommons.mutant.59.sol] 
PROCESSING MUTANT: 218:                 Maths.wmul(pendingFactor - Maths.WAD, poolState_.debt)  ==>                  Maths.wmul( poolState_.debt,pendingFactor - Maths.WAD)...VALID [written to mutants/PoolCommons/PoolCommons.mutant.60.sol] 
PROCESSING MUTANT: 225:                 Maths.wdiv(newInterest_, depositAboveHtp) + Maths.WAD // lender factor  ==>                  Maths.wdiv(newInterest_, depositAboveHtp) + Maths.WAD // lbeginer factor...VALID [written to mutants/PoolCommons/PoolCommons.mutant.61.sol] 
PROCESSING MUTANT: 225:                 Maths.wdiv(newInterest_, depositAboveHtp) + Maths.WAD // lender factor  ==>                  Maths.wdiv(newInterest_, depositAboveHtp) + Maths.WAD //  factor...VALID [written to mutants/PoolCommons/PoolCommons.mutant.62.sol] 
PROCESSING MUTANT: 244:     ) internal pure returns (uint256 newInterestRate_)  {  ==>      ) internal view returns (uint256 newInterestRate_)  {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.63.sol] 
PROCESSING MUTANT: 244:     ) internal pure returns (uint256 newInterestRate_)  {  ==>      ) internal  returns (uint256 newInterestRate_)  {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.64.sol] 
PROCESSING MUTANT: 250:         if (poolState_.debt != 0) {  ==>          if (poolState_.debt > 0) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.65.sol] 
PROCESSING MUTANT: 253:             mau102 = mau * PERCENT_102 / 1e18;  ==>              mau102 = mau + PERCENT_102 / 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.66.sol] 
PROCESSING MUTANT: 253:             mau102 = mau * PERCENT_102 / 1e18;  ==>              mau102 = mau - PERCENT_102 / 1e18;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.67.sol] 
PROCESSING MUTANT: 257:         int256 tu = (lupt0DebtEma_ != 0) ?   ==>          int256 tu = (lupt0DebtEma_ > 0) ? ...VALID [written to mutants/PoolCommons/PoolCommons.mutant.68.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.69.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (false) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.70.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (true) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.71.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          /*if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;*/...VALID [written to mutants/PoolCommons/PoolCommons.mutant.72.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (!(!poolState_.isNewInterestAccrued)) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.73.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (0==1) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.74.sol] 
PROCESSING MUTANT: 260:         if (!poolState_.isNewInterestAccrued) poolState_.rate = interestRate_;  ==>          if (1==1) poolState_.rate = interestRate_;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.75.sol] 
PROCESSING MUTANT: 265:         if (4 * (tu - mau102) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {  ==>          if (4 * (tu - mau102) <= ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.76.sol] 
PROCESSING MUTANT: 265:         if (4 * (tu - mau102) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {  ==>          if (4 * (tu - mau-1) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.77.sol] 
PROCESSING MUTANT: 265:         if (4 * (tu - mau102) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {  ==>          if (4 * (tu - mau102) < ((tu + mau-1 - 1e18) ** 2) / 1e18 - 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.78.sol] 
PROCESSING MUTANT: 265:         if (4 * (tu - mau102) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {  ==>          if ((4+1) * (tu - mau102) < ((tu + mau102 - 1e18) ** 2) / 1e18 - 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.79.sol] 
PROCESSING MUTANT: 266:             newInterestRate_ = Maths.wmul(poolState_.rate, INCREASE_COEFFICIENT);  ==>              newInterestRate_ = Maths.wmul( INCREASE_COEFFICIENT,poolState_.rate);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.80.sol] 
PROCESSING MUTANT: 268:         } else if (4 * (tu - mau) > 1e18 - ((tu + mau - 1e18) ** 2) / 1e18) {  ==>          } else if (4 * (tu - mau) >= 1e18 - ((tu + mau - 1e18) ** 2) / 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.81.sol] 
PROCESSING MUTANT: 269:             newInterestRate_ = Maths.wmul(poolState_.rate, DECREASE_COEFFICIENT);  ==>              newInterestRate_ = Maths.wmul( DECREASE_COEFFICIENT,poolState_.rate);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.82.sol] 
PROCESSING MUTANT: 273:         newInterestRate_ = Maths.min(500 * 1e18, Maths.max(0.001 * 1e18, newInterestRate_));  ==>          newInterestRate_ = Maths.min(500 * 1e18, Maths.max( newInterestRate_,0.001 * 1e18));...VALID [written to mutants/PoolCommons/PoolCommons.mutant.83.sol] 
PROCESSING MUTANT: 286:         if (depositEma_ != 0) utilization_ = Maths.wdiv(debtEma_, depositEma_);  ==>          if (depositEma_ > 0) utilization_ = Maths.wdiv(debtEma_, depositEma_);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.84.sol] 
PROCESSING MUTANT: 297:         uint256 base = 1_000_000 * 1e18 - Maths.wmul(Maths.min(mau_, 1e18), 1_000_000 * 1e18);  ==>          uint256 base = 1_000_000 * 1e18 - Maths.wmul(Maths.min( 1e18,mau_), 1_000_000 * 1e18);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.85.sol] 
PROCESSING MUTANT: 298:         if (base < 1e18) {  ==>          if (base <= 1e18) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.86.sol] 
PROCESSING MUTANT: 300:         } else {  ==>          }  {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.87.sol] 
PROCESSING MUTANT: 312:     ) internal view returns (uint256 meaningfulDeposit_) {  ==>      ) internal  returns (uint256 meaningfulDeposit_) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.88.sol] 
PROCESSING MUTANT: 313:         uint256 dwatp = _dwatp(t0Debt_, inflator_, t0Debt2ToCollateral_);  ==>          uint256 dwatp = _dwatp(t0Debt_, t0Debt2ToCollateral_, inflator_);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.89.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (dwatp <= 0) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.90.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (dwatp < 0) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.91.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (dwatp == 1) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.92.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (dwatp == (0+1)) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.93.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (false) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.94.sol] 
PROCESSING MUTANT: 314:         if (dwatp == 0) {  ==>          if (0==1) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.95.sol] 
PROCESSING MUTANT: 316:         } else {  ==>          }  {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.96.sol] 
PROCESSING MUTANT: 317:             if      (dwatp >= MAX_PRICE) meaningfulDeposit_ = 0;  ==>              if      (dwatp > MAX_PRICE) meaningfulDeposit_ = 0;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.97.sol] 
PROCESSING MUTANT: 317:             if      (dwatp >= MAX_PRICE) meaningfulDeposit_ = 0;  ==>              if      (dwatp >= MAX_PRICE) meaningfulDeposit_ = 1;...VALID [written to mutants/PoolCommons/PoolCommons.mutant.98.sol] 
PROCESSING MUTANT: 317:             if      (dwatp >= MAX_PRICE) meaningfulDeposit_ = 0;  ==>              if      (dwatp >= MAX_PRICE) meaningfulDeposit_ = (0+1);...VALID [written to mutants/PoolCommons/PoolCommons.mutant.99.sol] 
PROCESSING MUTANT: 318:             else if (dwatp >= MIN_PRICE) meaningfulDeposit_ = Deposits.prefixSum(deposits_, _indexOf(dwatp));  ==>              else if (dwatp > MIN_PRICE) meaningfulDeposit_ = Deposits.prefixSum(deposits_, _indexOf(dwatp));...VALID [written to mutants/PoolCommons/PoolCommons.mutant.100.sol] 
PROCESSING MUTANT: 336:     ) external pure returns (uint256) {  ==>      ) external view returns (uint256) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.101.sol] 
PROCESSING MUTANT: 354:             PRBMathUD60x18.exp((interestRate_ * (block.timestamp - inflatorUpdate)) / 365 days)  ==>              PRBMathUD60x18.exp((interestRate_ * (block.timestamp % inflatorUpdate)) / 365 days)...VALID [written to mutants/PoolCommons/PoolCommons.mutant.102.sol] 
PROCESSING MUTANT: 364:     ) external pure returns (uint256) {  ==>      ) external view returns (uint256) {...VALID [written to mutants/PoolCommons/PoolCommons.mutant.103.sol] 
PROCESSING MUTANT: 373:         EmaState storage emaParams_  ==>          EmaState memory emaParams_...VALID [written to mutants/PoolCommons/PoolCommons.mutant.104.sol] 
105 VALID MUTANTS
3285 INVALID MUTANTS
0 REDUNDANT MUTANTS
Valid Percentage: 3.0973451327433628%
