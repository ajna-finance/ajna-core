*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, solidity.rules, c_like.rules
SKIPPED 58 MUTANTS ONLY CHANGING STRING LITERALS
3767 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 19:     uint256 internal constant SIZE = 8192;  ==>      uint256  constant SIZE = 8192;...VALID [written to mutants/Deposits/Deposits.mutant.0.sol] 
PROCESSING MUTANT: 56:             if (scaling != 0) unscaledAddAmount_ = Maths.wmul(newValue, scaling) - Maths.wmul(value, scaling);  ==>              if (scaling > 0) unscaledAddAmount_ = Maths.wmul(newValue, scaling) - Maths.wmul(value, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.1.sol] 
PROCESSING MUTANT: 56:             if (scaling != 0) unscaledAddAmount_ = Maths.wmul(newValue, scaling) - Maths.wmul(value, scaling);  ==>              if (scaling != 0) unscaledAddAmount_ = Maths.wmul( scaling,newValue) - Maths.wmul(value, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.2.sol] 
PROCESSING MUTANT: 56:             if (scaling != 0) unscaledAddAmount_ = Maths.wmul(newValue, scaling) - Maths.wmul(value, scaling);  ==>              if (scaling != 0) unscaledAddAmount_ = Maths.wmul(newValue, scaling) - Maths.wmul( scaling,value);...VALID [written to mutants/Deposits/Deposits.mutant.3.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.4.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       +  @return sumIndex_      Smallest index where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.5.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       -  @return sumIndex_      Smallest index where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.6.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       /  @return sumIndex_      Smallest index where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.7.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       %  @return sumIndex_      Smallest index where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.8.sol] 
     break;...VALID [written to mutants/Deposits/Deposits.mutant.9.sol] 
     continue;...VALID [written to mutants/Deposits/Deposits.mutant.10.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_       index where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.11.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest  where prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.12.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index  prefixsum greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.13.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index where  greater than the sum...VALID [written to mutants/Deposits/Deposits.mutant.14.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index where prefixsum  than the sum...VALID [written to mutants/Deposits/Deposits.mutant.15.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index where prefixsum greater  the sum...VALID [written to mutants/Deposits/Deposits.mutant.16.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index where prefixsum greater than  sum...VALID [written to mutants/Deposits/Deposits.mutant.17.sol] 
PROCESSING MUTANT: 69:      *  @return sumIndex_      Smallest index where prefixsum greater than the sum  ==>       *  @return sumIndex_      Smallest index where prefixsum greater than the ...VALID [written to mutants/Deposits/Deposits.mutant.18.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       +  @return sumIndexSum_   Sum at index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.19.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       -  @return sumIndexSum_   Sum at index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.20.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       /  @return sumIndexSum_   Sum at index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.21.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       %  @return sumIndexSum_   Sum at index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.22.sol] 
     break;...VALID [written to mutants/Deposits/Deposits.mutant.23.sol] 
     continue;...VALID [written to mutants/Deposits/Deposits.mutant.24.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       *  @return sumIndexSum_    at index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.25.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       *  @return sumIndexSum_   Sum  index PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.26.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       *  @return sumIndexSum_   Sum at  PRECEDING sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.27.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       *  @return sumIndexSum_   Sum at index  sumIndex_...VALID [written to mutants/Deposits/Deposits.mutant.28.sol] 
PROCESSING MUTANT: 70:      *  @return sumIndexSum_   Sum at index PRECEDING sumIndex_  ==>       *  @return sumIndexSum_   Sum at index PRECEDING ...VALID [written to mutants/Deposits/Deposits.mutant.29.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 << (_numBits + 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.30.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 << (_numBits * 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.31.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 << (_numBits / 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.32.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 << (_numBits % 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.33.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 >< (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.34.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 ==< (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.35.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 <=< (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.36.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 >=< (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.37.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 !=< (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.38.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 1 << (_numBits  1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.39.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // 0 << (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.40.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // -1 << (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.41.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // (1+1) << (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.42.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; // (1-1) << (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.43.sol] 
PROCESSING MUTANT: 78:         uint256 i  = 4096; // 1 << (_numBits - 1) = 1 << (13 - 1) = 4096  ==>          uint256 i  = 4096; //  << (_numBits - 1) = 1 << (13 - 1) = 4096...VALID [written to mutants/Deposits/Deposits.mutant.44.sol] 
PROCESSING MUTANT: 85:         while (i > 0) {  ==>          while (i != 0) {...VALID [written to mutants/Deposits/Deposits.mutant.45.sol] 
PROCESSING MUTANT: 93:                 (scaling != 0 ?  Maths.wmul(Maths.wmul(runningScale, scaling), value) : Maths.wmul(runningScale, value));  ==>                  (scaling > 0 ?  Maths.wmul(Maths.wmul(runningScale, scaling), value) : Maths.wmul(runningScale, value));...VALID [written to mutants/Deposits/Deposits.mutant.46.sol] 
PROCESSING MUTANT: 93:                 (scaling != 0 ?  Maths.wmul(Maths.wmul(runningScale, scaling), value) : Maths.wmul(runningScale, value));  ==>                  (scaling != 0 ?  Maths.wmul(Maths.wmul( scaling,runningScale), value) : Maths.wmul(runningScale, value));...VALID [written to mutants/Deposits/Deposits.mutant.47.sol] 
PROCESSING MUTANT: 93:                 (scaling != 0 ?  Maths.wmul(Maths.wmul(runningScale, scaling), value) : Maths.wmul(runningScale, value));  ==>                  (scaling != 0 ?  Maths.wmul(Maths.wmul(runningScale, scaling), value) : Maths.wmul( value,runningScale));...VALID [written to mutants/Deposits/Deposits.mutant.48.sol] 
PROCESSING MUTANT: 105:                 if (scaling != 0) runningScale = Maths.wmul(runningScale, scaling);  ==>                  if (scaling > 0) runningScale = Maths.wmul(runningScale, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.49.sol] 
PROCESSING MUTANT: 105:                 if (scaling != 0) runningScale = Maths.wmul(runningScale, scaling);  ==>                  if (scaling != 0) runningScale = Maths.wmul( scaling,runningScale);...VALID [written to mutants/Deposits/Deposits.mutant.50.sol] 
PROCESSING MUTANT: 108:                 sumIndexSum_   = scaledValue;  ==>                  sumIndexSum_   = ...VALID [written to mutants/Deposits/Deposits.mutant.51.sol] 
PROCESSING MUTANT: 108:                 sumIndexSum_   = scaledValue;  ==>                  /*sumIndexSum_   = scaledValue;*/...VALID [written to mutants/Deposits/Deposits.mutant.52.sol] 
PROCESSING MUTANT: 112:             i = i >> 1;  ==>              i = i >>= 1;...VALID [written to mutants/Deposits/Deposits.mutant.53.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.54.sol] 
PROCESSING MUTANT: 136:     ) internal pure returns (uint256 lsb_) {  ==>      ) internal view returns (uint256 lsb_) {...VALID [written to mutants/Deposits/Deposits.mutant.55.sol] 
PROCESSING MUTANT: 137:         if (i_ != 0) {  ==>          if (i_ >= 0) {...VALID [written to mutants/Deposits/Deposits.mutant.56.sol] 
PROCESSING MUTANT: 137:         if (i_ != 0) {  ==>          if (i_ > 0) {...VALID [written to mutants/Deposits/Deposits.mutant.57.sol] 
PROCESSING MUTANT: 137:         if (i_ != 0) {  ==>          if (true) {...VALID [written to mutants/Deposits/Deposits.mutant.58.sol] 
PROCESSING MUTANT: 137:         if (i_ != 0) {  ==>          if (1==1) {...VALID [written to mutants/Deposits/Deposits.mutant.59.sol] 
PROCESSING MUTANT: 171:             if((bit & index_) != 0) {  ==>              if((bit & index_) > 0) {...VALID [written to mutants/Deposits/Deposits.mutant.60.sol] 
PROCESSING MUTANT: 177:                 if (scaling != 0) {  ==>                  if (scaling > 0) {...VALID [written to mutants/Deposits/Deposits.mutant.61.sol] 
PROCESSING MUTANT: 181:                     uint256 scaledFactor = Maths.wmul(factor_, scaling);  ==>                      uint256 scaledFactor = Maths.wmul( scaling,factor_);...VALID [written to mutants/Deposits/Deposits.mutant.62.sol] 
PROCESSING MUTANT: 183:                     sum += Maths.wmul(scaledFactor, value) - Maths.wmul(scaling, value);  ==>                      sum += Maths.wmul( value,scaledFactor) - Maths.wmul(scaling, value);...VALID [written to mutants/Deposits/Deposits.mutant.63.sol] 
PROCESSING MUTANT: 183:                     sum += Maths.wmul(scaledFactor, value) - Maths.wmul(scaling, value);  ==>                      sum += Maths.wmul(scaledFactor, value) - Maths.wmul( value,scaling);...VALID [written to mutants/Deposits/Deposits.mutant.64.sol] 
PROCESSING MUTANT: 189:                     sum += Maths.wmul(factor_, value) - value;  ==>                      sum += Maths.wmul( value,factor_) - value;...VALID [written to mutants/Deposits/Deposits.mutant.65.sol] 
PROCESSING MUTANT: 204:                 if (scaling != 0) sum = Maths.wmul(value, scaling) - Maths.wmul(value - sum, scaling);  ==>                  if (scaling > 0) sum = Maths.wmul(value, scaling) - Maths.wmul(value - sum, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.66.sol] 
PROCESSING MUTANT: 204:                 if (scaling != 0) sum = Maths.wmul(value, scaling) - Maths.wmul(value - sum, scaling);  ==>                  if (scaling != 0) sum = Maths.wmul( scaling,value) - Maths.wmul(value - sum, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.67.sol] 
PROCESSING MUTANT: 204:                 if (scaling != 0) sum = Maths.wmul(value, scaling) - Maths.wmul(value - sum, scaling);  ==>                  if (scaling != 0) sum = Maths.wmul(value, scaling) - Maths.wmul( scaling,value - sum);...VALID [written to mutants/Deposits/Deposits.mutant.68.sol] 
PROCESSING MUTANT: 207:             bit = bit << 1;  ==>              bit = bit <<= 1;...VALID [written to mutants/Deposits/Deposits.mutant.69.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.70.sol] 
PROCESSING MUTANT: 224:         uint256 runningScale = Maths.WAD; // Tracks scale(index_) as we move down Fenwick tree  ==>          uint256 runningScale = Maths.WAD; //  scale(index_) as we move down Fenwick tree...VALID [written to mutants/Deposits/Deposits.mutant.71.sol] 
PROCESSING MUTANT: 225:         uint256 j            = SIZE;      // bit that iterates from MSB to LSB  ==>          uint256 j            = SIZE;      //  that iterates from MSB to LSB...VALID [written to mutants/Deposits/Deposits.mutant.72.sol] 
PROCESSING MUTANT: 226:         uint256 index        = 0;         // build up sumIndex bit by bit  ==>          uint256 index        = 0;         //  up sumIndex bit by bit...VALID [written to mutants/Deposits/Deposits.mutant.73.sol] 
PROCESSING MUTANT: 233:             if (index + j > SIZE) continue;  ==>              if (index / j > SIZE) continue;...VALID [written to mutants/Deposits/Deposits.mutant.74.sol] 
PROCESSING MUTANT: 233:             if (index + j > SIZE) continue;  ==>              if (index % j > SIZE) continue;...VALID [written to mutants/Deposits/Deposits.mutant.75.sol] 
PROCESSING MUTANT: 233:             if (index + j > SIZE) continue;  ==>              if (false) continue;...VALID [written to mutants/Deposits/Deposits.mutant.76.sol] 
PROCESSING MUTANT: 233:             if (index + j > SIZE) continue;  ==>              /*if (index + j > SIZE) continue;*/...VALID [written to mutants/Deposits/Deposits.mutant.77.sol] 
PROCESSING MUTANT: 233:             if (index + j > SIZE) continue;  ==>              if (0==1) continue;...VALID [written to mutants/Deposits/Deposits.mutant.78.sol] 
PROCESSING MUTANT: 239:             if (sumIndex_ & j != 0) {  ==>              if (sumIndex_ & j > 0) {...VALID [written to mutants/Deposits/Deposits.mutant.79.sol] 
PROCESSING MUTANT: 244:                 sum_  += scaled != 0 ? Maths.wmul(Maths.wmul(runningScale, scaled), value) : Maths.wmul(runningScale, value);  ==>                  sum_  += scaled > 0 ? Maths.wmul(Maths.wmul(runningScale, scaled), value) : Maths.wmul(runningScale, value);...VALID [written to mutants/Deposits/Deposits.mutant.80.sol] 
PROCESSING MUTANT: 244:                 sum_  += scaled != 0 ? Maths.wmul(Maths.wmul(runningScale, scaled), value) : Maths.wmul(runningScale, value);  ==>                  sum_  += scaled != 0 ? Maths.wmul(Maths.wmul( scaled,runningScale), value) : Maths.wmul(runningScale, value);...VALID [written to mutants/Deposits/Deposits.mutant.81.sol] 
PROCESSING MUTANT: 244:                 sum_  += scaled != 0 ? Maths.wmul(Maths.wmul(runningScale, scaled), value) : Maths.wmul(runningScale, value);  ==>                  sum_  += scaled != 0 ? Maths.wmul(Maths.wmul(runningScale, scaled), value) : Maths.wmul( value,runningScale);...VALID [written to mutants/Deposits/Deposits.mutant.82.sol] 
PROCESSING MUTANT: 249:                 if (index == sumIndex_) break;  ==>                  if (index >= sumIndex_) break;...VALID [written to mutants/Deposits/Deposits.mutant.83.sol] 
PROCESSING MUTANT: 249:                 if (index == sumIndex_) break;  ==>                  if (index > sumIndex_) break;...VALID [written to mutants/Deposits/Deposits.mutant.84.sol] 
PROCESSING MUTANT: 249:                 if (index == sumIndex_) break;  ==>                  if (false) break;...VALID [written to mutants/Deposits/Deposits.mutant.85.sol] 
PROCESSING MUTANT: 249:                 if (index == sumIndex_) break;  ==>                  /*if (index == sumIndex_) break;*/...VALID [written to mutants/Deposits/Deposits.mutant.86.sol] 
PROCESSING MUTANT: 249:                 if (index == sumIndex_) break;  ==>                  if (0==1) break;...VALID [written to mutants/Deposits/Deposits.mutant.87.sol] 
PROCESSING MUTANT: 252:                 if (scaled != 0) runningScale = Maths.wmul(runningScale, scaled);  ==>                  if (scaled > 0) runningScale = Maths.wmul(runningScale, scaled);...VALID [written to mutants/Deposits/Deposits.mutant.88.sol] 
PROCESSING MUTANT: 252:                 if (scaled != 0) runningScale = Maths.wmul(runningScale, scaled);  ==>                  if (scaled != 0) runningScale = Maths.wmul( scaled,runningScale);...VALID [written to mutants/Deposits/Deposits.mutant.89.sol] 
PROCESSING MUTANT: 255:             j = j >> 1;  ==>              j = j >>= 1;...VALID [written to mutants/Deposits/Deposits.mutant.90.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.91.sol] 
PROCESSING MUTANT: 287:             if (scaling != 0) unscaledRemoveAmount_ = Maths.wmul(value + unscaledRemoveAmount_, scaling) - Maths.wmul(value,  scaling);  ==>              if (scaling > 0) unscaledRemoveAmount_ = Maths.wmul(value + unscaledRemoveAmount_, scaling) - Maths.wmul(value,  scaling);...VALID [written to mutants/Deposits/Deposits.mutant.92.sol] 
PROCESSING MUTANT: 287:             if (scaling != 0) unscaledRemoveAmount_ = Maths.wmul(value + unscaledRemoveAmount_, scaling) - Maths.wmul(value,  scaling);  ==>              if (scaling != 0) unscaledRemoveAmount_ = Maths.wmul( scaling,value + unscaledRemoveAmount_) - Maths.wmul(value,  scaling);...VALID [written to mutants/Deposits/Deposits.mutant.93.sol] 
PROCESSING MUTANT: 287:             if (scaling != 0) unscaledRemoveAmount_ = Maths.wmul(value + unscaledRemoveAmount_, scaling) - Maths.wmul(value,  scaling);  ==>              if (scaling != 0) unscaledRemoveAmount_ = Maths.wmul(value + unscaledRemoveAmount_, scaling) - Maths.wmul(  scaling,value);...VALID [written to mutants/Deposits/Deposits.mutant.94.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.95.sol] 
PROCESSING MUTANT: 313:             if (scaling != 0) scaled_ = Maths.wmul(scaled_, scaling);  ==>              if (scaling > 0) scaled_ = Maths.wmul(scaled_, scaling);...VALID [written to mutants/Deposits/Deposits.mutant.96.sol] 
PROCESSING MUTANT: 313:             if (scaling != 0) scaled_ = Maths.wmul(scaled_, scaling);  ==>              if (scaling != 0) scaled_ = Maths.wmul( scaling,scaled_);...VALID [written to mutants/Deposits/Deposits.mutant.97.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.98.sol] 
PROCESSING MUTANT: 327:         return (scaling != 0) ? Maths.wmul(scaling, deposits_.values[SIZE]) : deposits_.values[SIZE];   ==>          return (scaling > 0) ? Maths.wmul(scaling, deposits_.values[SIZE]) : deposits_.values[SIZE]; ...VALID [written to mutants/Deposits/Deposits.mutant.99.sol] 
PROCESSING MUTANT: 327:         return (scaling != 0) ? Maths.wmul(scaling, deposits_.values[SIZE]) : deposits_.values[SIZE];   ==>          return (scaling < 0) ? Maths.wmul(scaling, deposits_.values[SIZE]) : deposits_.values[SIZE]; ...VALID [written to mutants/Deposits/Deposits.mutant.100.sol] 
PROCESSING MUTANT: 327:         return (scaling != 0) ? Maths.wmul(scaling, deposits_.values[SIZE]) : deposits_.values[SIZE];   ==>          return (scaling != 0) ? Maths.wmul( deposits_.values[SIZE],scaling) : deposits_.values[SIZE]; ...VALID [written to mutants/Deposits/Deposits.mutant.101.sol] 
PROCESSING MUTANT: 357:         while (j & index_ == 0) {  ==>          while (j & index_ <= 0) {...VALID [written to mutants/Deposits/Deposits.mutant.102.sol] 
PROCESSING MUTANT: 361:             unscaledDepositValue_ -= scaling != 0 ? Maths.wmul(scaling, value) : value;  ==>              unscaledDepositValue_ -= scaling > 0 ? Maths.wmul(scaling, value) : value;...VALID [written to mutants/Deposits/Deposits.mutant.103.sol] 
PROCESSING MUTANT: 361:             unscaledDepositValue_ -= scaling != 0 ? Maths.wmul(scaling, value) : value;  ==>              unscaledDepositValue_ -= scaling != 0 ? Maths.wmul( value,scaling) : value;...VALID [written to mutants/Deposits/Deposits.mutant.104.sol] 
PROCESSING MUTANT: 362:             j = j << 1;  ==>              j = j <<= 1;...VALID [written to mutants/Deposits/Deposits.mutant.105.sol] 
            continue;...VALID [written to mutants/Deposits/Deposits.mutant.106.sol] 
107 VALID MUTANTS
2117 INVALID MUTANTS
0 REDUNDANT MUTANTS
Valid Percentage: 4.811151079136691%
