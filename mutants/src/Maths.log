*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, solidity.rules, c_like.rules
SKIPPED 8 MUTANTS ONLY CHANGING STRING LITERALS
888 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 11:     uint256 internal constant WAD = 1e18;  ==>      uint256  constant WAD = 1e18;...VALID [written to mutants/Maths/Maths.mutant.0.sol] 
PROCESSING MUTANT: 13:     function wmul(uint256 x, uint256 y) internal pure returns (uint256) {  ==>      function wmul( uint256 y,uint256 x) internal pure returns (uint256) {...VALID [written to mutants/Maths/Maths.mutant.1.sol] 
PROCESSING MUTANT: 21:     function max(uint256 x, uint256 y) internal pure returns (uint256) {  ==>      function max( uint256 y,uint256 x) internal pure returns (uint256) {...VALID [written to mutants/Maths/Maths.mutant.2.sol] 
PROCESSING MUTANT: 22:         return x >= y ? x : y;  ==>          return x > y ? x : y;...VALID [written to mutants/Maths/Maths.mutant.3.sol] 
PROCESSING MUTANT: 25:     function min(uint256 x, uint256 y) internal pure returns (uint256) {  ==>      function min( uint256 y,uint256 x) internal pure returns (uint256) {...VALID [written to mutants/Maths/Maths.mutant.4.sol] 
PROCESSING MUTANT: 26:         return x <= y ? x : y;  ==>          return x < y ? x : y;...VALID [written to mutants/Maths/Maths.mutant.5.sol] 
PROCESSING MUTANT: 33:     function rmul(uint256 x, uint256 y) internal pure returns (uint256) {  ==>      function rmul( uint256 y,uint256 x) internal pure returns (uint256) {...VALID [written to mutants/Maths/Maths.mutant.6.sol] 
PROCESSING MUTANT: 37:     function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {  ==>      function rpow(uint256 x, uint256 n) internal view returns (uint256 z) {...VALID [written to mutants/Maths/Maths.mutant.7.sol] 
PROCESSING MUTANT: 38:         z = n % 2 != 0 ? x : 10**27;  ==>          z = n % 2 > 0 ? x : 10**27;...VALID [written to mutants/Maths/Maths.mutant.8.sol] 
PROCESSING MUTANT: 40:         for (n /= 2; n != 0; n /= 2) {  ==>          for (n /= 2; n > 0; n /= 2) {...VALID [written to mutants/Maths/Maths.mutant.9.sol] 
PROCESSING MUTANT: 41:             x = rmul(x, x);  ==>              x = rmul( x,x);...VALID [written to mutants/Maths/Maths.mutant.10.sol] 
PROCESSING MUTANT: 43:             if (n % 2 != 0) {  ==>              if (n % 2 > 0) {...VALID [written to mutants/Maths/Maths.mutant.11.sol] 
                continue;...VALID [written to mutants/Maths/Maths.mutant.12.sol] 
PROCESSING MUTANT: 44:                 z = rmul(z, x);  ==>                  z = rmul( x,z);...VALID [written to mutants/Maths/Maths.mutant.13.sol] 
            continue;...VALID [written to mutants/Maths/Maths.mutant.14.sol] 
PROCESSING MUTANT: 49:     function rayToWad(uint256 x) internal pure returns (uint256) {  ==>      function rayToWad(uint256 x) internal view returns (uint256) {...VALID [written to mutants/Maths/Maths.mutant.15.sol] 
PROCESSING MUTANT: 57:     function maxInt(int256 x, int256 y) internal pure returns (int256) {  ==>      function maxInt( int256 y,int256 x) internal pure returns (int256) {...VALID [written to mutants/Maths/Maths.mutant.16.sol] 
PROCESSING MUTANT: 58:         return x >= y ? x : y;  ==>          return x == y ? x : y;...VALID [written to mutants/Maths/Maths.mutant.17.sol] 
PROCESSING MUTANT: 58:         return x >= y ? x : y;  ==>          return x > y ? x : y;...VALID [written to mutants/Maths/Maths.mutant.18.sol] 
PROCESSING MUTANT: 61:     function minInt(int256 x, int256 y) internal pure returns (int256) {  ==>      function minInt( int256 y,int256 x) internal pure returns (int256) {...VALID [written to mutants/Maths/Maths.mutant.19.sol] 
PROCESSING MUTANT: 62:         return x <= y ? x : y;  ==>          return x < y ? x : y;...VALID [written to mutants/Maths/Maths.mutant.20.sol] 
21 VALID MUTANTS
822 INVALID MUTANTS
0 REDUNDANT MUTANTS
Valid Percentage: 2.491103202846975%
